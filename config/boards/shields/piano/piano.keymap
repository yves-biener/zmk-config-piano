/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
    tapping-term-ms = <201>;
    flavor = "tap-preferred";
 };
&sk {
     release-after-ms = <2000>;
     quick-release;
 };
 
/* Layers */
#define AL1 0
#define AL2 1
#define AL3 2
#define SM1 3
#define SM2 4	
#define NM1 5	
#define SYS 6
#define BT 7	
/ { 
    combos {
        compatible = "zmk,combos";
        combo_sys {
            timeout-ms = <30>;
            key-positions = <3 4 5>;
            bindings = <&to SYS>;
        };
        combo_caps {
            timeout-ms = <30>;
            key-positions = <10 11 12>;
            bindings = <&caps_word>;
        };
        combo_bt  {
            timeout-ms = <10>;
            key-positions = <11 12>;
            bindings = <&to BT>;
            layers = <SM1>; 
        };
        lalt {
            timeout-ms = <20>;
            key-positions = <8 9>;
            bindings = <&kp LALT>; 
            layers = <SYS>; 
        };
        lclk {
            timeout-ms = <20>;
            key-positions = <10 11>;
            bindings = <&mkp LCLK>;
            layers = <SYS>;
        };
        rclk {
            timeout-ms = <20>;
            key-positions = <3 4>;
            bindings = <&mkp RCLK>;
            layers = <SYS>;
        };
    };
    behaviors {
        hm_l: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hm_r: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_R";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        sr: shift_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&to>;
            retro-tap;
        };
        hl_l: homerow_layers_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_L";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        hl_r: homerow_layers_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_R";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        alpha2macro: behavior_macro_1 {
            compatible = "zmk,behavior-macro";
            label = "MACRO1";
            #binding-cells = <0>;
            bindings = < &sl AL2 >;
        };
        alpha3macro: behavior_macro_2 {
            compatible = "zmk,behavior-macro";
            label = "MACRO2";
            #binding-cells = <0>;
            bindings = < &sl AL3 >;
        };
    };
// 				0		1		2					3		4			5
// 		6		7		8		9 					10		11			12 		13
//								14	15 	16 	17		
       keymap {
        compatible = "zmk,keymap";
		alpha1 {
		bindings = <
		 		&hm_l LGUI COMMA 	&hm_l LALT PERIOD 	&hm_l LCTRL P		&hm_r RCTRL G 	&hm_r RALT C    	&hm_r RGUI R	  
		&hl_l NM1 A	&hl_l SM2 O	&hl_l SM1 E	&hl_l SYS U 	 	&hl_r SYS H    	&hl_r SM1 T   		&hl_r SM2 N 	&hl_r NM1 S
			 	 		 	     &alpha2macro &alpha3macro  &kp RET &mt LC(LS(LALT)) SPC
		>;
		};

		alpha2 {
		bindings = <
		 	 	&kp SINGLE_QUOTE 	&none		&none	 	 	&none    	&none		&kp L 	
		&kp SEMICOLON	&kp Q 		&kp J		&kp K 			&kp M 		&kp W		&kp V	&kp Z 
			 	 		 	&none	&sk LSHIFT 		&sk RSHIFT	&trans
		>;
		};

		alpha3 {
		bindings = <
		 	 	&kp TAB	&none	&kp Y 	 	&kp F	&none		&kp SLASH	
		&kp ESC	&none 	&kp X	&kp I		&kp D	&kp B	&none	&none 
			 	&none 		&none 			&trans	&trans
		>;
		};

		sym1 {
		bindings = <
		 		&kp PRCNT   	&kp MINUS	&kp EQUAL	    	&kp GRAVE	&kp CARET		&kp BSLH	
		&kp AMPS	&kp STAR 	&kp HASH	&kp DLLR	 	&kp LBKT	&kp RBKT	 	&kp LPAR 	&kp RPAR
				  				&EXCL  		&trans		&trans  	&kp QMARK
		>;
		};
		sym2 {
		bindings = <
				&kp ATSN	&td LA(RBKT) LA(LS(RBKT))	&td  LA(LBKT) LA(LS(LBKT))	&kp LPRN	&kp RPRN 	&kp SEMI 	
		&kp STAR  	&kp PRCNT	&td QMARK EXCL       		&kp DQT   			&kp LBRC  	&kp RBRC	&kp AMPS	&kp COLON 
		 		&trans		&trans			&trans 	&trans

		>;
		};

		num {
		bindings = <
				&hm_l LGUI DOT 	&hm_l LALT N0	&hm_l LCTRL N1 		&hm_r RCTRL N2 	&hm_r RALT N3		&hm_r RGUI N4	
		&kp MINUS	&kp PLUS 	&kp N5		&kp N6			&kp N7		&kp N8			&kp N9   	&kp EQUAL
							&trans		&trans		&trans			&trans
		>;
		};

		sys {
		bindings = <
				&kp LC(LS(TAB))	&kp RC(TAB) &kp PG_UP		&kp LS(LC(C)) 	&kp UP 		&kp LS(LC(V))
		&kp C_PREV	&kp C_PP	&kp C_NEXT 	&kp PG_DN		&kp LEFT  		&kp DOWN 	&kp RIGHT 	&kp RET 
		 			 		 &trans	&trans	&trans &trans
		>;
		};

		bt {
		bindings = <
				&bt BT_PRV	&bt BT_NXT	&trans 			&trans 	&trans	&trans	
		&bootloader  	&trans 		&trans 		&trans 			&trans 	&trans 	&trans	&bt BT_CLR
		 	 	 				&to AL1	&none &none	&none
		>;
		};
	};
};
